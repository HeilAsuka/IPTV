name: Python CI with GitHub Actions

on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: '0 */8 * * *'  # 每 8 小时执行一次

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # 检出仓库
    - name: Checkout repository
      uses: actions/checkout@v2

    # 设置 Python 环境
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    # 安装依赖
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt  # 安装所有依赖

    # 安装 Chrome 浏览器
    - name: Set up Chrome
      run: |
        # 下载并安装指定版本的 Chrome 浏览器
        wget https://storage.googleapis.com/chrome-for-testing-public/130.0.6723.91/linux64/chrome-linux64.zip
        unzip chrome-linux64.zip
        # 查看解压后的文件和目录结构，调试路径
        ls -lR chrome-linux64/
        # 将解压后的 chrome 移动到正确的位置
        sudo mv chrome-linux64 /opt/google/chrome  # 调整路径到正确位置

    # 安装与 Chrome 版本匹配的 ChromeDriver
    - name: Install ChromeDriver
      run: |
        # 下载并安装与 Chrome 130 版本匹配的 ChromeDriver
        wget https://storage.googleapis.com/chrome-for-testing-public/130.0.6723.116/linux64/chromedriver-linux64.zip
        unzip chromedriver-linux64.zip
        # 查看解压后的文件结构，调试路径
        ls -lR chromedriver-linux64/
        # 移动 chromedriver 到正确的位置
        sudo mv chromedriver-linux64/chromedriver /usr/local/bin/

    # 运行 main.py 脚本
    - name: Run main.py script
      run: |
        python main.py

    # 提交并推送更改到 GitHub 仓库
    - name: Commit and push changes
      run: |
        git config --global user.name "MemoryCollection"
        git config --global user.email "csszue@gmail.com"
        git pull origin main --rebase  # 拉取并合并远程更改
        git add .
        git commit -m "Automated file update" || echo "No changes to commit"
        git push origin main
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
